[{"title":"HTML基础标签","date":"2019-11-17T12:57:30.000Z","path":"2019/11/17/HTML基础标签/","text":"HTML基础标签 标签 描述 &lt;!DOCTYPE&gt; 定义文档类型。 &lt;html&gt; 定义 HTML 文档。 &lt;title&gt; 定义文档的标题。 &lt;body&gt; 定义文档的主体。 &lt;h1&gt; to &lt;h6&gt; 定义 HTML 标题。 &lt;p&gt; 定义段落。 &lt;br&gt; 定义简单的折行。 &lt;hr&gt; 定义水平线。 &lt;!--...--&gt; 定义注释。 &lt;!DOCTYPE&gt; 标签定义和用法&lt;!DOCTYPE&gt; 声明必须是 HTML 文档的第一行，位于 &lt;html&gt; 标签之前。 声明不是 HTML 标签；它是指示 web 浏览器关于页面使用哪个 HTML 版本进行编写的指令。 在 HTML 4.01 中，&lt;!DOCTYPE&gt; 声明引用 DTD，因为 HTML 4.01 基于 SGML。DTD 规定了标记语言的规则，这样浏览器才能正确地呈现内容。 HTML5 不基于 SGML，所以不需要引用 DTD。 提示：请始终向 HTML 文档添加 &lt;!DOCTYPE&gt; 声明，这样浏览器才能获知文档类型。 HTML 4.01 与 HTML5 之间的差异在 HTML 4.01 中有三种 &lt;!DOCTYPE&gt; 声明。在 HTML5 中只有一种：&lt;!DOCTYPE html&gt; 提示和注释注释：&lt;!DOCTYPE&gt; 声明没有结束标签。提示：&lt;!DOCTYPE&gt; 声明对大小写不敏感。 &lt;html&gt; 标签定义和用法此元素可告知浏览器其自身是一个 HTML 文档。 &lt;html&gt; 与 &lt;/html&gt; 标签限定了文档的开始点和结束点，在它们之间是文档的头部和主体。 提示和注释注释：即使 html 元素是文档的根元素，它也不包含 doctype 元素。doctype 元素必须位于 html 元素之前。 属性 属性 值 描述 manifest url 定义一个 URL，在这个 URL 上描述了文档的缓存信息。 xmlns 定义 XML namespace 属性。 &lt;title&gt; 标签定义和用法&lt;title&gt; 元素可定义文档的标题。 浏览器会以特殊的方式来使用标题，并且通常把它放置在浏览器窗口的标题栏或状态栏上。同样，当把文档加入用户的链接列表或者收藏夹或书签列表时，标题将成为该文档链接的默认名称。 提示和注释提示：&lt;title&gt; 标签是 &lt;head&gt; 标签中唯一要求包含的东西。 标准属性&lt;title&gt; 标签支持以下标准属性： 属性 值 描述 dir rtl ltr 规定元素中内容的文本方向。 lang language_code 规定元素中内容的语言代码。 xml:lang language_code 规定 XHTML 文档中元素内容的语言代码。 &lt;body&gt; 标签定义和用法body 元素定义文档的主体。 body 元素包含文档的所有内容（比如文本、超链接、图像、表格和列表等等。） HTML 与 XHTML 之间的差异在 HTML 4.01 中，所有 body 元素的“呈现属性”均不被赞成使用。 在 XHTML 1.0 Strict DTD 中，所有 body 元素的“呈现属性”均不被支持。 可选的属性 属性 值 描述 alink rgb(x,x,x)#xxxxxxcolorname 不赞成使用。请使用样式取代它。 规定文档中活动链接（active link）的的颜色。 background URL 不赞成使用。请使用样式取代它。 bgcolor rgb(x,x,x)#xxxxxxcolorname 不赞成使用。请使用样式取代它。 规定文档的背景颜色。 link rgb(x,x,x)#xxxxxxcolorname 不赞成使用。请使用样式取代它。 规定文档中未访问链接的默认颜色。 text rgb(x,x,x)#xxxxxxcolorname 不赞成使用。请使用样式取代它。 规定文档中所有文本的颜色。 vlink rgb(x,x,x)#xxxxxxcolorname 不赞成使用。请使用样式取代它。规定文档中已被访问链接的颜色。 &lt;h1&gt; 到 &lt;h6&gt; 标签定义和用法&lt;h1&gt; - &lt;h6&gt; 标签可定义标题。&lt;h1&gt; 定义最大的标题。&lt;h6&gt; 定义最小的标题。 由于 h 元素拥有确切的语义，因此请您慎重地选择恰当的标签层级来构建文档的结构。因此，请不要利用标题标签来改变同一行中的字体大小。相反，我们应当使用层叠样式表定义来达到漂亮的显示效果。 标准属性 id, class, title, style, dir, lang, xml:lang 事件属性 onclick, ondblclick, onmousedown, onmouseup, onmouseover,onmousemove, onmouseout, onkeypress, onkeydown, onkeyup &lt;p&gt; 标签定义和用法&lt;p&gt; 标签定义段落。 p 元素会自动在其前后创建一些空白。浏览器会自动添加这些空间，您也可以在样式表中规定。 &lt;br&gt; 标签定义和用法&lt;br&gt; 可插入一个简单的换行符。 &lt;br&gt; 标签是空标签（意味着它没有结束标签，因此这是错误的：&lt;br&gt;&lt;/br&gt;）。在 XHTML 中，把结束标签放在开始标签中，也就是 &lt;br /&gt;。 请注意，&lt;br&gt; 标签只是简单地开始新的一行，而当浏览器遇到 &lt;p&gt; 标签时，通常会在相邻的段落之间插入一些垂直的间距。 clear 属性如果您希望文本流在内联表格或图像的下一行继续输出，请使用 clear 属性，该属性有三个可选的值：left、right 或者 all，每个值都代表一个边界或两边的边界。 提示和注释注释：请使用 &lt;br&gt; 来输入空行，而不是分割段落。 &lt;hr&gt; 标签定义和用法&lt;hr&gt; 标签在 HTML 页面中创建一条水平线。 水平分隔线（horizontal rule）可以在视觉上将文档分隔成各个部分。 可选的属性 属性 值 描述 align centerleftright 不赞成使用。请使用样式取代它。 规定 hr 元素的对齐方式。 noshade noshade 不赞成使用。请使用样式取代它。规定 hr 元素的颜色呈现为纯色。 size pixels 不赞成使用。请使用样式取代它。规定 hr 元素的高度（厚度）。 width pixels% 不赞成使用。请使用样式取代它。规定 hr 元素的宽度。 &lt;!--...--&gt;标签定义和用法注释标签用于在源代码中插入注释。注释不会显示在浏览器中。 您可使用注释对您的代码进行解释，这样做有助于您在以后的时间对代码的编辑。当您编写了大量代码时尤其有用。 使用注释标签来隐藏浏览器不支持的脚本也是一个好习惯（这样就不会把脚本显示为纯文本）。","comments":true,"tags":[{"name":"HTML标签","slug":"HTML标签","permalink":"https://cheungkooho.github.io/tags/HTML%E6%A0%87%E7%AD%BE/"}]},{"title":"Markdown语法的简要规则","date":"2019-11-15T16:33:07.000Z","path":"2019/11/16/Markdown语法的简要规则/","text":"Markdown简介 Markdown是一种轻量级标记语言，创始人为约翰·格鲁伯（英语：John Gruber）。它允许人们“使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML（或者HTML）文档。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。由于Markdown的轻量化、易读易写特性，并且对于图片，图表、数学式都有支持，当前许多网站都广泛使用 Markdown 来撰写帮助文档或是用于论坛上发表消息。例如：GitHub、reddit、Diaspora、Stack Exchange、OpenStreetMap 、SourceForge等。甚至Markdown能被使用来撰写电子书。 标题标题是每篇文章都需要也是最常用的格式。在 Markdown 中，如果一段文字被定义为标题，只要在这段文字前加 # 号即可。‘# 一级标题’‘## 二级标题’‘### 三级标题’以此类推，总共六级标题。建议在井号后加一个空格，这是最标准的 Markdown 语法。 列表在 Markdown 下，列表的显示只需要在文字前加上 - 或 * 即可变为无序列表，有序列表则直接在文字前加1. 2. 3. 符号，要和文字之间加上一个字符的空格。 引用如果你需要引用一小段别处的句子，那么就要用引用的格式。 例如这样 只需要在文本前加入 &gt; 这种尖括号（大于号）即可 图片与链接插入链接与插入图片的语法很像，区别在一个 !号图片为：![]()链接为：[]() 插入图片的地址需要图床，这里推荐围脖图床修复计划 与 CloudApp 的服务，生成URL地址即可。 粗体与斜体Markdown 的粗体和斜体也非常简单，用两个 * 包含一段文本就是粗体的语法，用一个 * 包含一段文本就是斜体的语法。 例如：这里是粗体 这里是斜体 表格表格是我觉得 Markdown 比较累人的地方，例子如下： | Tables | Are | Cool || ------------- |:-------------:| -----:|| col 3 is | right-aligned | $1600 || col 2 is | centered | $12 || zebra stripes | are neat | $1 | 这种语法生成的表格如下： 代码框如果你是个程序猿，需要在文章里优雅的引用代码框，在 Markdown下实现也非常简单，只需要用两个 ` 把中间的代码包裹起来。图例： 使用 tab 键即可缩进。 分割线分割线的语法只需要三个 * 号或者三个-，例如： ***--- 到这里，Markdown 的基本语法在日常的使用中基本就没什么大问题了，只要多加练习，配合好用的工具，写起东西来肯定会行云流水。","comments":true,"tags":[{"name":"Markdown","slug":"Markdown","permalink":"https://cheungkooho.github.io/tags/Markdown/"}]},{"title":"我的第一篇博客文章","date":"2019-11-15T10:04:58.000Z","path":"2019/11/15/我的第一篇博客文章/","text":"第一章内容 第二章内容 参考文献","comments":true,"tags":[{"name":"随笔","slug":"随笔","permalink":"https://cheungkooho.github.io/tags/%E9%9A%8F%E7%AC%94/"}]},{"title":"Hello World","date":"2019-11-15T09:30:29.139Z","path":"2019/11/15/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","comments":true,"tags":[]}]